server:
  port: ${PORT:8095}
spring:
  application:
    # the name of the application represents the global identifier of this microservice.
    name: catalogue-service-srdc
    url: ${CATALOGUE_SERVICE_URL}
  cache:
      jcache:
        config: classpath:ehcache.xml
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI:http://localhost:8888}
      # failFast is disabled per default, so that the service can start standalone without config server.
      # failFast should be enabled in production environments.
      # it can be set via an environment variable or the config server
      failFast: ${CONFIG_SERVER_FAILFAST:false}
    discovery:
      # by disabling the service discovery the application/service can be started in "standalone mode".
      # service discovery is disabled by default and should be enabled (set to true) for the "cloud mode".
      # it can be set via an environment variable or the config server
      enabled: ${discovery.enabled:${DISCOVERY_ENABLED:false}}
  datasource:
    ubldb:
      url: jdbc:postgresql://${UBL_DB_HOST}:${UBL_DB_HOST_PORT}/${UBL_DB_NAME}?currentSchema=public&ApplicationName=catalogue-service-ubldb
      username: ${UBL_DB_USERNAME}
      password: ${UBL_DB_PASSWORD}
      driver-class: org.postgresql.Driver
    binarycontentdb:
      url: jdbc:postgresql://${BINARY_CONTENT_DB_HOST}:${BINARY_CONTENT_DB_PORT}/${BINARY_CONTENT_DB_NAME}?currentSchema=public&ApplicationName=catalogue-service-binarycontentdb
      username: ${BINARY_CONTENT_DB_USERNAME}
      password: ${BINARY_CONTENT_DB_PASSWORD}
      driver-class: org.postgresql.Driver
    test-on-borrow: true
    test-while-idle: true
    remove-abandoned: false #making this false since some of the queries take too much time and abandoning connections causes an error in such cases
    log-abandoned: true
    initial-size: 3
    max-active: 175
    max-idle: 3
    min-idle: 3
    max-wait: 90000
    time-between-eviction-runs-millis: 30000
    min-evictable-idle-time-millis: 60000
    validation-query: "SELECT 1;" # Validation query must be set in order to test connections
  messages:
    encoding: ISO-8859-1
  jackson:
    mapper:
      PROPAGATE_TRANSIENT_MARKER: true
  http:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  mail:
    host: ${SMTP_HOST:localhost}
    port: ${SMTP_PORT:25}
    defaultFrom: ${SMTP_DEFAULT_FROM:}
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    smtp.auth: ${SMTP_AUTH:true}
    properties.mail.smtp.starttls.enable: ${SMTP_STARTTLS:true}
    platformName : ${MAIL_PLATFORM_NAME:NIMBLE}
  thymeleaf:
    cache: false
    mode: HTML

logstash:
  uri: ${LOGSTASH_URI:localhost:5000}

#### c3p0 database connection pool configurations
com:
  mchange:
    v2:
      c3p0:
        impl:
          DefaultConnectionTester:
            querylessTestRunner: SWITCH
      log:
        MLog: slf4j

persistence:
  categorydb:
    driver: org.postgresql.Driver
    connection:
      url: jdbc:postgresql://${CATEGORY_DB_HOST}:${CATEGORY_DB_PORT}/${CATEGORY_DB_NAME}
    username: ${CATEGORY_DB_USERNAME}
    password: ${CATEGORY_DB_PASSWORD}
    schema: public
  orm:
    ubl:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 10
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        event:
          merge:
            entity_copy_observer: allow

    modaml:
      hibernate:
        connection:
          url: jdbc:h2:file://${user.home}/nimble/modaml;AUTO_SERVER=TRUE;MVCC=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=10;INIT=create schema IF NOT EXISTS APPS
          username: sa
          password:
          driver_class: org.h2.Driver
        dialect: org.hibernate.dialect.H2Dialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 10
        c3p0:
          acquire_increment: 2
          initialPoolSize: 2
          max_size: 10
          min_size: 2
          maxStatementsPerConnection: 2
          acquireRetryAttempts: 10
          acquireRetryDelay: 100
          numHelperThreads: 10
          idle_test_period: 600
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        event:
          merge:
            entity_copy_observer: allow
security:
  oauth2:
    authorization:
      check-token-access:

nimble:
  catalog:
    max-file-size: 5 #in MB
    spare-part: ${SPARE_PART_ENABLED:false}
    category:
      enabled-taxonomies: ${CATALOGUE_SERVICE_ENABLED_TAXONOMIES} #comma separated taxonomy ids as defined in the Taxonomies.json file e.g. eClass,FurnitureOntology
  binary-content:
    url: CatalogBinaryContentUri
  identity:
    url: ${IDENTITY_SERVICE_URL}
    check-token: ${IDENTITY_SERVICE_CHECK_TOKEN:true}
  keycloak:
    public-key: ${KEYCLOAK_PUBLIC_KEY}
  frontend:
    url: ${FRONTEND_URL:http://localhost:9092}
  trust:
    url: ${TRUST_SERVICE_URL}
  indexing:
    url: ${INDEXING_SERVICE_URL}
    sync: ${INDEXING_SYNC:true}
    federated-index-enabled: ${FEDERATED_INDEX_ENABLED:false}
    federated-index-url: ${FEDERATED_INDEXING_SERVICE_URL:}
  oauth:
    client:
      clientId: ${CATALOG_SERVICE_OAUTH_CLIENT_ID}
      clientSecret: ${CATALOG_SERVICE_OAUTH_SECRET}
      accessTokenUri: ${OAUTH_CLIENT_ACCESSTOKEN_URI}
    eFactoryClient:
      clientId: ${OAUTH_EFACTORY_CLIENT_ID:}
      clientSecret: ${OAUTH_EFACTORY_CLIENT_SECRET:}
      accessTokenUri: ${OAUTH_EFACTORY_CLIENT_ACCESSTOKEN_URI:}
      userDetailsUri: ${OAUTH_EFACTORY_USER_DETAILS_URI:}
  check-entity-ids: ${CHECK_ENTITY_IDS:false}
  federation-instance-id: ${FEDERATION_INSTANCE_ID}
  delegate-service:
    url: ${DELEGATE_SERVICE_URL:}
  languages: ${CATALOG_SERVICE_LANGUAGES:en,es}

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 300000
  threadpool:
    default:
      coreSize: 175
      maxQueueSize: -1

################################################################################################
################################## KUBERNETES CONFIG ###########################################
################################################################################################

---

spring:
  profiles: k8s

persistence:
  categorydb:
    driver: org.postgresql.Driver
    connection:
      url: # set in eu.nimble.service.catalogue.config.CatalogueServiceConfig
    username: # set in eu.nimble.service.catalogue.config.CatalogueServiceConfig
    password: # set in eu.nimble.service.catalogue.config.CatalogueServiceConfig
    bluemix:
      credentials_json: ${BLUEMIX_CATEGORY_DB_JSON:}
  orm:
    ubl:
      hibernate:
        connection:
          url: #set in eu.nimble.utility.config.PersistenceConfig
          username: #set in eu.nimble.utility.config.PersistenceConfig
          password: #set in eu.nimble.utility.config.PersistenceConfig
          driver_class: org.postgresql.Driver
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 10
        c3p0:
          acquire_increment: 5
          initialPoolSize: 5
          max_size: 25
          min_size: 5
          maxStatementsPerConnection: 5
          acquireRetryAttempts: 10
          acquireRetryDelay: 100
          numHelperThreads: 10
          idle_test_period: 600
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        event:
          merge:
            entity_copy_observer: allow
      bluemix:
        credentials_json: ${BLUEMIX_UBL_DB_JSON:}
    modaml:
      hibernate:
        connection:
          url: #set in eu.nimble.utility.config.PersistenceConfig
          username: #set in eu.nimble.utility.config.PersistenceConfig
          password: #set in eu.nimble.utility.config.PersistenceConfig
          driver_class: org.postgresql.Driver
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 10
        c3p0:
          acquire_increment: 2
          initialPoolSize: 2
          max_size: 10
          min_size: 2
          maxStatementsPerConnection: 2
          acquireRetryAttempts: 10
          acquireRetryDelay: 100
          numHelperThreads: 10
          idle_test_period: 600
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        event:
          merge:
            entity_copy_observer: allow
      bluemix:
        credentials_json: ${BLUEMIX_MODAML_DB_JSON:}


################################################################################################
################################### TEST CONFIG ###########################################
################################################################################################

---

spring:
  profiles: test
  application:
    url: http://localhost:8095
  datasource:
    ubldb:
      url: jdbc:h2:mem:db3;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=-1;INIT=create schema IF NOT EXISTS APPS
      username: sa
      password:
      driver-class: org.h2.Driver
#      url: jdbc:postgresql://localhost:5432/ubldb_test?currentSchema=public
#      username: postgres
#      password: nimble
#      driver_class: org.postgresql.Driver
    binarycontentdb:
      url: jdbc:h2:mem:db2;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=-1;INIT=create schema IF NOT EXISTS APPS
      username: sa
      password:
      driver-class: org.h2.Driver
#      url: jdbc:postgresql://localhost:5432/binarycontentdb_test?currentSchema=public
#      username: postgres
#      password: nimble
#      driver_class: org.postgresql.Driver
persistence:
  categorydb:
    driver: org.postgresql.Driver
    connection:
      url:
    username:
    password:
    schema:
  orm:
    ubl:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        show_sql: true
#        hbm2ddl:
#          auto: create-drop

nimble:
  catalog:
    max-file-size: 5 #in MB
    category:
      enabled-taxonomies: eClass,FurnitureOntology
  binary-content:
    url: CatalogBinaryContentUri
  identity:
    url:
    check-token: true
  trust:
    url:
  indexing:
    url: http://localhost:8090
    sync: false
    federated-index-enabled: ${FEDERATED_INDEX_ENABLED:false}
    federated-index-url: ${FEDERATED_INDEXING_SERVICE_URL:http://localhost:8090}
  oauth:
    client:
      clientId:
      clientSecret:
      accessTokenUri:
  check-entity-ids: false
  federation-instance-id: TEST_INSTANCE

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
